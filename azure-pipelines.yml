# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:

  #API_VERSION: "googleapi" 
  # or 
  API_VERSION: "googleapi"

  APIGEE_USER_ENV: $(APIGEE_USER)
  APIGEE_ENV: "default-dev"
  APIGEE_ORG: "bap-emea-apigee-5"
  APIGEE_DEPLOYMENT_SUFFIX: ""

  MAVEN_PROFILE: "test"

  AUTHOR_EMAIL: $(APIGEE_USER)
  COMMIT_ID: $(Build.SourceVersion)
  COMMIT_BRANCH: $(Build.SourceBranch)

  TEST_HOST: "$(APIGEE_ORG)-$(APIGEE_ENV).apigee.net"
  #TEST_HOST: x-demo7.lalevee.org

  # GCP_SERVICE_ACCCOUNT, APIGEE_CREDS_USR & APIGEE_CREDS_PSW are stored in Azure Pipeline variable settings
  

steps:
    
# install node.js tools and dependencies
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  enabled: "false"
    
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './tools_dependencies'
  displayName: npmInstalls
  enabled: "true"

# run Apigeelint, API proxy linter
# generate result output in Junit because Azure task PublishTestResults doesn't (yet) support html
- bash: |
    echo "run Apigeelint"
    /home/vsts/work/1/s/tools_dependencies/node_modules/apigeelint/cli.js  -s apiproxy/ -e PO027 -f html.js > ./apigeelint-out.html 
  enabled: "false"
  displayName: runApigeeLint

- publish: $(System.DefaultWorkingDirectory)/apigeelint-out.html
  enabled: "false"
  artifact: apigeelint-out.html

# Configure EdgeeConfig/edge.json file: update target environment name
- bash: |
    sed -i "s/target_apigee_env/$(APIGEE_ENV)/g" ./EdgeConfig/edge.json
  enabled: "true"
  displayName: Update edge.json

# Generate GCP Service Account file from Azure Pipeline variable GCP_SERVICE_ACCCOUNT
# if deploy to Apigee X/hybrid
- bash: |
    echo '$(GCP_SERVICE_ACCCOUNT)' > sa.json
  enabled: "true"
  condition:  eq(variables.API_VERSION, 'googleapi')
  displayName: Generate SA Key file 
  env:  
    GCP_SERVICE_ACCCOUNT: $(GCP_SERVICE_ACCCOUNT)


# Maven Deploy Apigee Configuration (from EdgeeConfig/edge.json): Apigee edge
- task: Maven@3
  displayName: mvnApigeeConfigurationApigee
  enabled: "true"
  condition:  eq(variables.API_VERSION, 'apigeeapi')
  inputs:
    mavenPomFile: './pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "install -Papigeeapi -Dapigee.org=$(APIGEE_ORG) -Denv=$(APIGEE_ENV) -Dapigee.username=$(APIGEE_CREDS_USR) -Dapigee.password=$(APIGEE_CREDS_PSW) -Dapigee.config.file=EdgeConfig/edge.json -Dapigee.config.options=update"
  env:  
      APIGEE_PASS: $(APIGEE_PASS)
        
# Maven Deploy Apigee Configuration (from EdgeeConfig/edge.json): Apigee X/hybrid
- task: Maven@3
  displayName: mvnApigeeConfigurationGoogle
  enabled: "true"
  condition:  eq(variables.API_VERSION, 'googleapi')
  inputs:
    mavenPomFile: './pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "install -Pgoogleapi -Dapigee.org=$(APIGEE_ORG) -Denv=$(APIGEE_ENV) -Dsa=sa.json -Dapigee.config.file=./EdgeConfig/edge.json -Dapigee.config.options=update"

# Maven Config Env.
- task: Maven@3
  displayName: mvnProcessResources
  enabled: "true"
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "process-resources -Pgoogleapi -Dcommit=$GIT_COMMIT -Dbranch=$GIT_BRANCH -Dauthor=$AUTHOR_EMAIL -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX"


# Maven Package proxy bundle
- task: Maven@3
  displayName: mvnApigeeConfigure
  enabled: "true"
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "apigee-enterprise:configure -P$API_VERSION -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV  -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX" 


# Maven Deploy proxy bundle: Apigee Edge
- task: Maven@3
  displayName: mvnApigeeDeploy
  enabled: "true"
  condition:  eq(variables.API_VERSION, 'apigeeapi')
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "apigee-enterprise:deploy -Papigeeapi -Dorg=$(APIGEE_ORG) -Denv=$(APIGEE_ENV) -Dpassword=$(APIGEE_CREDS_PSW) -Dusername=$(APIGEE_CREDS_USR) -Ddeployment.suffix=$(APIGEE_BUILD_DEPLOYMENT_SUFFIX)" 
  env:
    APIGEE_PASS: $(APIGEE_PASS)

# Maven Deploy proxy bundle: Apigee X/hybrid
- task: Maven@3
  displayName: mvnApigeeDeploy
  enabled: "true"
  condition:  eq(variables.API_VERSION, 'googleapi')
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "apigee-enterprise:deploy -Pgoogleapi -Dapigee.org=$(APIGEE_ORG) -Denv=$(APIGEE_ENV) -Dsa=sa.json  -Ddeployment.suffix=$(APIGEE_BUILD_DEPLOYMENT_SUFFIX)" 
    
# run Apickli, API test integration
# generate result output in Junit because Azure task PublishTestResults doesn't (yet) support html
- bash: |
    echo "run Apickli"
    echo "----------------------------"
    cd test/integration 
    npm install 
    sed -i "s/organization_hostname/$TEST_HOST/g" ./features/support/init.js
    cat ./features/support/init.js
    npm test
    echo "----------------------------"
    cat report.json | node_modules/cucumber-junit/bin/cucumber-junit  > apickli-output.xml 
  displayName: runApickli
  enabled: "false"

  # publish Apigeelint JUnit result
- task: PublishTestResults@2
  displayName: publishApickliResults
  enabled: "false"
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/*-output.xml'